{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger YourPet API Docs ",
    "description": "This is the specification for the YourPets API server. ",
    "version": "0.0.1"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://your-pet-xqzt.onrender.com/api" },
    { "url": "http://localhost:3001/api" }
    
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "News",
      "description": "Operations with news"
    },
    {
      "name": "Sponsors",
      "description": "Operations with our partners"
    },
    {
      "name": "Notices",
      "description": "Operations with our notices"
    },
    {
      "name": "User",
      "description": "Operations with users"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "description": "Registration's object",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "description": "User login",
        "parameters": [],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password invalid",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh user's tokens",
        "description": "Refresh user's tokens",
        "parameters": [],
        "requestBody": {
          "description": "refreshToken",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "403": {
            "description": "Token invalid",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "description": "Logout user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "403": {
            "description": "Token invalid",
            "content": {}
          },
          "401": {
            "description": "Not authorized.Please,provide a token",
            "content": {}
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "description": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Token invalid",
            "content": {}
          },
          "401": {
            "description": "Not authorized.Please,provide a token",
            "content": {}
          }
        }
      }
    },

    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get all news",
        "description": "Get all news",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "search in the title of news by keyword",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "the number of query objects to display on one page for pagination",
            "required": false,
            "type": "integer"
          }
        ],

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/sponsors": {
      "get": {
        "tags": ["Sponsors"],
        "summary": "Get all sponsors",
        "description": "Get all sponsors",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SponsorsResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

      
     "/user": {
      "get": {
        "tags": ["User"],
        "security": [{ "Bearer": [] }],
        "summary": "Get all the information about the user and his pets",

        "parameters": [
         
        ],
        "responses": {
          "200": {
            "description": "Information fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                      "$ref": "#/components/schemas/GetUserInfoResponse"
                    
                  }
                }
              }
            },
                  "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "User not found"
          }
              
      }},
      "patch": {
        "tags": ["User"],
        "summary": "Update user data",
        "description": "Update the user information with the provided fields. Requires authentication token.",
        "security": [{ "Bearer": [] }],
        "parameters": [
          
        ],
        "requestBody": {
          "description": "Update user object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {"multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserResponse"
              }}
          }},
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

     "/user/pets": {
      "post": {
        "tags": ["User"],
        "security": [{ "Bearer": [] }],
        "summary": "Add a new pet",
        "parameters": [
        
        ],
        "requestBody": {
          "description": "Pet`s object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/user/pets/{petId}": {
      "delete": {
        "tags": ["User"],
        "security": [{ "Bearer": [] }],
        "summary": "Delete pet by id",
        "parameters":[ 
          {
            "name": "petId",
            "in": "path",
            "description": "Pet`s id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }]
        ,
        "responses": {
          "204": {
            "description": "Pet successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemovePetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/notices": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add notices",
        "description": "Add notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Notices object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NoticeAddRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices by category",
        "description": "Get notices by category",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Category by notices: [sell, lost-found, for-free,]",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "search in the title of notices by keyword",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "the number of query objects to display on one page for pagination",
            "required": false,
            "type": "integer"
          },
           {
            "name": "sex",
            "in": "query",
            "description": "gender",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeByCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/AddNoticeToFavoriteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get one notice by ID",
        "description": "Get one notice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/InvalidFormatResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice by ID",
        "description": "Delete notice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/InvalidFormatResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/ForbiddenToDeleteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/NotFoundNoticeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/user/own": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all users notices",
        "description": "Get all users notices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "the number of query objects to display on one page for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "search in the title of notices by keyword",
            "required": false,
            "type": "string"
          },
           {
            "name": "sex",
            "in": "query",
            "description": "gender",
            "required": false,
            "type": "string"
          }
          
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/GetUserNoticesResponse"
                  }
                }
              }
            }
          },
         "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorites/all": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all users favorites notices",
        "description": "Get all users favorites notices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "the number of query objects to display on one page for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "search in the title of notices by keyword",
            "required": false,
            "type": "string"
          },
          {
            "name": "sex",
            "in": "query",
            "description": "gender",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetFavoriteNoticesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorites/add/{id}": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add notice to favorites",
        "description": "Add notice to favorites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeToFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/InvalidFormatResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          
          "409": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictFavoriteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorites/remove/{id}": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Remove notice favorites",
        "description": "Remove notice favorites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveNoticeFromFavoriteResponse"
                }
              }
            }
          },
           "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/InvalidFormatResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictFavoriteDelResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name only  latin letter,all number and all special characters",
            "example": "Mariya"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name only is only latin letters and may contain a space",
                "example": "Mariya"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@gmail.com"
              }
            }
          }
        },
        "example": {
          "user": {
            "name": "Mariya",
            "email": "mariya@gmail.com"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's accessToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@gmail.com"
              },
              "name": {
                "type": "string",
                "description": "User's name only  latin letter,all number and all special characters",
                "example": "Mariya"
              }
            }
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjczNDU0MzM2fQ.W6B7E3iIZo_f0S7xNonPZsLtMYk0ArK1Bbxnqmhp_Gs",
          "user": {
            "email": "mariya@gmail.com",
            "name": "Mariya"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's accessToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac"
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjczNDU0MzM2fQ.W6B7E3iIZo_f0S7xNonPZsLtMYk0ArK1Bbxnqmhp_Gs"
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "id",
            "example": "63b2a1aac7d7c8862b0f594f"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User's name only  latin letter,all number and all special characters",
            "example": "Mariya"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "format": "phone",
            "example": "+380932225577"
          },
          "birthday": {
            "type": "string",
            "description": "User's date of birthday in format :dd.mm.yyyy",
            "example": "01.03.2010"
          },
          "city": {
            "type": "string",
            "description": "User's city and region (only  latin letter,all number and all special characters)",
            "example": "Kiev"
          },

          "image": {
            "type": "string",
            "description": "User's image",
            "example": ""
          }
        },
        "example": {
          "_id": "63b420f8613598919c6a71a8",
          "email": "Mariya@gmail.com",
          "name": "Mariya",
          "phone": "+380936987452",
          "birthday": "01.03.2010",
          "city": "Kiev",
          "image": ""
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "a message about the successful logout of the user ",
            "example": "Logout success"
          }
        },
        "example": {
          "message": "Logout success"
        }
      },
      "NewsResponse": {
        "type": "object",
        "properties": {
          "news": {
            "type": "array",
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id",
                  "example": "63b2a1aac7d7c8862b0f594f"
                },
                "imgUrl": {
                  "type": "string",
                  "description": "New's image",
                  "example": "https://www.nytimes.com/images/2023/03/12/magazine/12mag-ethicist-online/12mag-ethicist-online-blog480.jpg"
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "example": "What I Learned Dogsitting for New York City’s Opulent Elite"
                },
                "text": {
                  "type": "string",
                  "description": "text",
                  "example": "In a city of yawning class inequality..."
                },
                "date": {
                  "type": "string",
                  "description": "date",
                  "example": "2023-03-08T16:30:04+0000"
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "example": "https://www.nytimes.com/2023/04/11/magazine/dogsitting-rich-new-york.html"
                }
              }
            }
          },
          "totalPages": {
            "type": "integer",
            "description": "total pages",
            "example": 1
          }
        },
        "example": {
          "news": [
            {
              "_id": "63b2a1aac7d7c8862b0f5961",
              "imgUrl": "https://www.nytimes.com/images/2023/03/12/magazine/12mag-ethicist-online/12mag-ethicist-online-blog480.jpg",
              "title": "What I Learned Dogsitting for New York City’s Opulent Elite",
              "text": "In a city of yawning class inequality...",
              "date": "2023-03-08T16:30:04+0000",
              "url": "https://www.nytimes.com/2023/04/11/magazine/dogsitting-rich-new-york.html"
            }
          ],
          "totalPages": 1
        }
      },
      "SponsorsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "id",
            "example": "63b2a1aac7d7c8862b0f594f"
          },
          "title": {
            "type": "string",
            "description": "title",
            "example": "Притулок для бездомних тварин 'Сіріус'"
          },

          "url": {
            "type": "string",
            "description": "url",
            "example": "https://dogcat.com.ua"
          },
          "addressUrl": {
            "type": "string",
            "description": "addressUrl",
            "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
          },
          "imageUrl": {
            "type": "string",
            "description": "imageUrl",
            "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
          },
          "address": {
            "type": "string",
            "description": "address",
            "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
          },
          "workDays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "isOpen": {
                  "type": "boolean",
                  "description": "isOpen",
                  "example": "false"
                },
                "from": {
                  "type": "string",
                  "description": "open",
                  "example": "11:00"
                },
                "to": {
                  "type": "string",
                  "description": "close",
                  "example": "16:00"
                },
                "weekday": {
                  "type": "string",
                  "description": "weekday",
                  "example": "SU"
                }
              }
            }
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "format": "phone",
            "example": "+380932225577"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          }
        },

        "example": {
          "_id": "63b2a23ac7d7c8862b0f5964",
          "title": "Притулок для бездомних тварин 'Сіріус'",
          "url": "https://dogcat.com.ua",
          "addressUrl": "https://goo.gl/maps/iq8NXEUf31EAQCzc6",
          "image": "",
          "address": "Fedorivka, Kyiv Oblast, Ukraine, 07372",
          "workDays": [
            {
              "isOpen": true,
              "from": "11:00",
              "to": "16:00",
              "weekday": "SU"
            }
          ],
          "phone": "+380931934069",
          "email": null
        }
      },
      "AddPetRequest": {
        "type": "object",
        "required": ["name", "birthday", "breed", "image"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Gori"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "20.05.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "huski"
          },
          "comments": {
            "type": "string",
            "description": "comments",
            "example": "super doggy"
          },
          "image": {
			      "type": "string",
            "description": "Pet`s photo (must be less than 3mb)",
            "format": "binary"
          }
        },
        "example": {
          "name": "Gori",
          "birthday": "20.05.2020",
          "breed": "huski",
          "comments": "super doggy",
          "image": ""
        }
      },
      "AddPetResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "id",
            "example": "63b548d5471bb460e28dc813"
          },
          "name": {
            "type": "string",
            "description": "Pet name",
            "example": "Gori"
          },
          "birthday": {
            "type": "string",
            "description": "Pet of birthday",
            "example": "20.05.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet breed",
            "example": "huski"
          },
          "image": {
            "type": "string",
            "description": "image your pet",
            "example": ""
          },
          "comments": {
            "type": "string",
            "description": "comments",
            "example": "super doggy"
          },
          "owner": {
            "type": "string",
            "description": "ID owner this pet",
            "example": "63b420f8613598919c6a71a8"
          },
          "createdAt": {
            "type": "string",
            "description": "date of creation",
            "example": "2023-01-04T09:37:25.604Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "date of update",
            "example": "2023-01-04T09:37:25.604Z"
          }
        },
        "example": {
          "_id": "63b548d5471bb460e28dc813",
          "name": "Gori",
          "birthday": "20.05.2020",
          "breed": "huski",
          "image": "",
          "comments": "super doggy",
          "owner": "63b420f8613598919c6a71a8",
          "createdAt": "2023-01-04T09:37:25.604Z",
          "updatedAt": "2023-01-04T09:37:25.604Z"
        }
      },
      "RemovePetResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "message about deleted",
            "example": "pet with name 'Gogi' has been deleted"
          },
          "id": {
            "type": "string",
            "description": "id deleted pet",
            "example": "pet has been deleted"
          }
        },
        "example": {
          "message": "pet has been deleted",
          "id": "63b2f9872ce348bf6f9387b4"
        }
      },
      "GetUserInfoResponse": {
        "type": "object",
        "properties": {
          "pets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id",
                  "example": "63b548d5471bb460e28dc813"
                },
                "name": {
                  "type": "string",
                  "description": "Pet name",
                  "example": "Gori"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pet of birthday",
                  "example": "20.05.2020"
                },
                "breed": {
                  "type": "string",
                  "description": "Pet breed",
                  "example": "huski"
                },
                "image": {
                  "type": "string",
                  "description": "image your pet",
                  "example": ""
                },
                "comments": {
                  "type": "string",
                  "description": "comments",
                  "example": "super doggy"
                }
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id",
                "example": "63b548d5471bb460e28dc813"
              },
              "name": {
                "type": "string",
                "description": "User name",
                "example": "Maks"
              },
              "email": {
                "type": "string",
                "description": "User email",
                "example": "maks@gmail.com"
              },
              "city": {
                "type": "string",
                "description": "User city",
                "example": "Kyiv"
              },
              "phone": {
                "type": "string",
                "description": "User phone",
                "example": "+380934557452"
              },
              "birthday": {
                "type": "string",
                "description": "User birthday",
                "example": "05.05.2013"
              },
              "image": {
                "type": "string",
                "description": "image your pet",
                "example": "h"
              }
            }
          }
        },
        "example": {
          "pets": [
            {
              "_id": "63b53c929165e3aafa203876",
              "name": "Ajaks",
              "birthday": "02.03.2003",
              "breed": "haski",
              "image": "",
              "comments": "adsgadgdagdg"
            }
          ],
          "user": {
            "id": "63b53c929165e3aafa203876",
            "name": "Denis",
            "email": "Vita@gmail.com",
            "city": "lviv",
            "phone": "+380936945352",
            "birthday": "20.05.2013",
            "image": ""
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Den"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@gmail.com"
          },
          "birthday": {
            "type": "string",
            "description": "User birthday",
            "example": "20.03.2021"
          },
          "phone": {
            "type": "string",
            "description": "User phone",
            "example": "+380936945352"
          },
          "city": {
            "type": "string",
            "description": "User location",
            "example": "Kyiv"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "User avatar",
            "example": "image.jpeg"
          }
        },
        "example": {
          "name": "Den",
          "email": "test@gmail.com",
          "phone": "+380936945352",
          "city": "Kyiv",
          "image": "imege.jpg",
          "birthday": "20.03.2021"
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "image": {
                "type": "string",
                "format":"binary",
                "description": "User avatar",
                "example": ""
              },
              "userInfo": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Den"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "test@gmail.com"
                  },
                  "city": {
                    "type": "string",
                    "description": "User location",
                    "example": "Kyiv"
                  },
                  "phone": {
                    "type": "string",
                    "description": "User phone",
                    "example": "+380936945352"
                  },
                  "birthday": {
                    "type": "string",
                    "description": "User birthday",
                    "example": "20.03.2021"
                  }
                }
              }
            }
          }
        },
        "example": {
          "user": {
            "image": "",
            "userInfo": {
              "name": "Denis",
              "email": "Vital@gmail.com",
              "city": "lviv",
              "phone": "+380934457849",
              "birthday": "13.02.2013"
            }
          }
        }
      },

      "NoticeAddRequest": {
        "type": "object",
        "required": ["category", "title", "date", "name", "breed", "image", "sex", "location"],
        "properties": {
          "category": {
            "type": "string",
            "description": "Category by notice one of [sell,lost-found,for-free]",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Title by notice",
            "example": "dog sell"
          },
          "name": {
            "type": "string",
            "description": "Pets name",
            "example": "Sem"
          },
          "date": {
            "type": "string",
            "description": "Pets birthday",
            "example": "02.02.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "whiteSnow"
          },
          "sex": {
            "type": "string",
            "description": "Sex one of [male, female]",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "image": {
            "type": "string",
            "format":"binary",
            "description": "Pet image",
            "example": "image.jpg"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Selling an awesome puppy"
          }
        },
        "example": {
          "category": "sell",
          "title": "dog sell",
          "name": "Sem",
          "date": "02.02.2020",
          "breed": "whiteSnow",
          "sex": "female",
          "location": "Kyiv,Ukraine",
          "price": 5000,
          "image": "image.jpg",
          "comments": "Selling an awesome puppy"
        }
      },
      "NoticeAddResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID notice",
            "example": "63b6ec81f474e0269d338e9e"
          },
          "category": {
            "type": "string",
            "description": "Category by notice",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Title by notice",
            "example": "dog sell"
          },
          "name": {
            "type": "string",
            "description": "Pets name",
            "example": "Sem"
          },
          "date": {
            "type": "string",
            "description": "Pets birthday",
            "example": "02.02.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "whiteSnow"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "image": {
            "type": "string",
            "format":"binary",
            "description": "Pet image",
            "example": ""
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Selling an awesome puppy"
          },
          "owner": {
            "type": "string",
            "description": "ID owner notices",
            "example": "63b420f8613598919c6a71a8"
          }
        },
        "example": {
          "_id": "63b6ec81f474e0269d338e9e",
          "category": "sell",
          "title": "dog sell",
          "name": "Sem",
          "date": "02.02.2020",
          "breed": "whiteSnow",
          "sex": "male",
          "location": "Kyiv",
          "price": 5000,
          "image": "",
          "comments": "Selling an awesome puppy",
          "owner": "63b420f8613598919c6a71a8"
        }
      },
      "GetNoticeByCategoryResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "ID notice",
                  "example": "63b6ec81f474e0269d338e9e"
                },
                "category": {
                  "type": "string",
                  "description": "Category by notice",
                  "example": "Sell"
                },
                "title": {
                  "type": "string",
                  "description": "Title by notice",
                  "example": "dog sell"
                },
                "name": {
                  "type": "string",
                  "description": "Pets name",
                  "example": "Sem"
                },
                "date": {
                  "type": "string",
                  "description": "Pets birthday",
                  "example": "02.02.2020"
                },
                "breed": {
                  "type": "string",
                  "description": "Pets breed",
                  "example": "whiteSnow"
                },
                "sex": {
                  "type": "string",
                  "description": "Sex list: [male, female]",
                  "example": "male"
                },
                "location": {
                  "type": "string",
                  "description": "Pet location",
                  "example": "Kyiv"
                },
                "price": {
                  "type": "integer",
                  "description": "Price",
                  "example": 5000
                },
                "image": {
                  "type": "string",
                  "description": "Pet image",
                  "example": ""
                },
                "comments": {
                  "type": "string",
                  "description": "Comments",
                  "example": "Selling an awesome puppy"
                },
                "owner": {
                  "type": "string",
                  "description": "ID owner notices",
                  "example": "63b420f8613598919c6a71a8"
                }
              }
            }
          },
          "totalPages": {
            "type": "integer",
            "description": "total pages",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "current page",
            "example": 1
          }
        },
        "example": {
          "notices": [
            {
              "_id": "63b5ce5d8adff5be0dbe3457",
              "category": "lost",
              "title": "Lost big and cool dog",
              "name": "Banny",
              "date": "01.01.2020",
              "breed": "shepherd",
              "sex": "male",
              "location": "Kharkiv",
              "price": 2000,
              "image": "",
              "comments": "Help me find my sweetheart!",
              "owner": "63b58e631b6aab70d0834284"
            }
          ],
          "totalPages": 1, 
          "page": 1
        }
      },
      "AddNoticeToFavoriteResponse": {
        "type": "object",
        "properties": {
          "id": {
             "type": "string",
            "description": "ID notices",
            "example": "63b412bc9f6bb331b54624ae"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Successfully added to favorites"
          }
        },
        "example": {
         
          "id": "63b412bc9f6bb331b54624ae",
          "message": "Successfully added to favorites"
        }
      },
      "RemoveNoticeFromFavoriteResponse": {
        "type": "object",
        "properties": {
          "id": {
             "type": "string",
            "description": "ID notices",
            "example": "63b412bc9f6bb331b54624ae"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Successfully removed from favorites"
          }

        },
        "example": {
         
          "id": "63b412bc9f6bb331b54624ae",
          "message": "Successfully removed to favorites"
        }
      },
      "GetUserNoticesResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "ID notice",
                  "example": "63b6ec81f474e0269d338e9e"
                },
                "category": {
                  "type": "string",
                  "description": "Category by notice",
                  "example": "Sell"
                },
                "title": {
                  "type": "string",
                  "description": "Title by notice",
                  "example": "dog sell"
                },
                "name": {
                  "type": "string",
                  "description": "Pets name",
                  "example": "Sem"
                },
                "date": {
                  "type": "string",
                  "description": "Pets birthday",
                  "example": "02.02.2020"
                },
                "breed": {
                  "type": "string",
                  "description": "Pets breed",
                  "example": "whiteSnow"
                },
                "sex": {
                  "type": "string",
                  "description": "Sex list: [male, female]",
                  "example": "male"
                },
                "location": {
                  "type": "string",
                  "description": "Pet location",
                  "example": "Kyiv"
                },
                "price": {
                  "type": "integer",
                  "description": "Price",
                  "example": 5000
                },
                "image": {
                  "type": "string",
                  "format":"binary",
                  "description": "Pet image",
                  "example": ""
                },
                "comments": {
                  "type": "string",
                  "description": "Comments",
                  "example": "Selling an awesome puppy"
                },
                "owner": {
                  "type": "string",
                  "description": "ID owner notices",
                  "example": "63b420f8613598919c6a71a8"
                }
              }
            }
          },
          "totalPages": {
            "type": "integer",
            "description": "total pages",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "current page",
            "example": 1
          }
        },
        "example": {
          "notices": [
            {
              "_id": "63b5ce5d8adff5be0dbe3457",
              "category": "lost",
              "title": "Lost big and cool dog",
              "name": "Banny",
              "date": "01.01.2020",
              "breed": "shepherd",
              "sex": "male",
              "location": "Kharkiv",
              "price": 2000,
              "image": "",
              "comments": "Help me find my sweetheart!",
              "owner": "63b58e631b6aab70d0834284"
            }
          ],
          "totalPages": 1, 
          "page": 1
        }
      },
      "GetFavoriteNoticesResponse": {
        "type": "object",
        "properties": {
                "notices": {
            "type": "array",
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "ID notice",
                  "example": "63b6ec81f474e0269d338e9e"
                },
                "category": {
                  "type": "string",
                  "description": "Category by notice",
                  "example": "Sell"
                },
                "title": {
                  "type": "string",
                  "description": "Title by notice",
                  "example": "dog sell"
                },
                "name": {
                  "type": "string",
                  "description": "Pets name",
                  "example": "Sem"
                },
                "date": {
                  "type": "string",
                  "description": "Pets birthday",
                  "example": "02.02.2020"
                },
                "breed": {
                  "type": "string",
                  "description": "Pets breed",
                  "example": "whiteSnow"
                },
                "sex": {
                  "type": "string",
                  "description": "Sex list: [male, female]",
                  "example": "male"
                },
                "location": {
                  "type": "string",
                  "description": "Pet location",
                  "example": "Kyiv"
                },
                "price": {
                  "type": "integer",
                  "description": "Price",
                  "example": 5000
                },
                "image": {
                  "type": "string",
                  "description": "Pet image",
                  "example": ""
                },
                "comments": {
                  "type": "string",
                  "description": "Comments",
                  "example": "Selling an awesome puppy"
                },
                "owner": {
                  "type": "string",
                  "description": "ID owner notices",
                  "example": "63b420f8613598919c6a71a8"
                }
              }
            }
          },
          "totalPages": {
            "type": "integer",
            "description": "total pages",
            "example": 1
          },
          "page": {
            "type": "integer",
            "description": "current page",
            "example": 1
          }
        },
        "example": {
          "notices": [
            {
              "_id": "63b5ce5d8adff5be0dbe3457",
              "category": "lost",
              "title": "Lost big and cool dog",
              "name": "Banny",
              "date": "01.01.2020",
              "breed": "shepherd",
              "sex": "male",
              "location": "Kharkiv",
              "price": 2000,
              "imageURL": "",
              "comments": "Help me find my sweetheart!",
              "owner": "63b58e631b6aab70d0834284"
            }
          ],
          "totalPages": 1, 
          "page": 1
        }
      },
      "GetOneNoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID notice",
            "example": "63b6ec81f474e0269d338e9e"
          },
          "category": {
            "type": "string",
            "description": "Category by notice",
            "example": "Sell"
          },
          "title": {
            "type": "string",
            "description": "Title by notice",
            "example": "dog sell"
          },
          "name": {
            "type": "string",
            "description": "Pets name",
            "example": "Sem"
          },
          "date": {
            "type": "string",
            "description": "Pets birthday",
            "example": "02.02.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "whiteSnow"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv,Ukraine"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "file": {
            "type": "string",
            "description": "Pet image",
            "example": "https://via.placeholder.com/300.png/#FDF7F2/#111111"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Selling an awesome puppy"
          },
          "owner": {
            "type": "object",
            "properties":{
              "id": {
                "type": "string",
                "description": "ID owner notices",
                "example": "63b420f8613598919c6a71a8"
              },
              "name":{
                "type": "string",
                "description": "name owner",
                "example": "Alina"
              },
              "phone":{
                "type": "string",
                "description": "phone owner",
                "example": "+380671111161"
              },
              "email":{
               "type": "string",
                "description": "phone owner",
                "example": "name@mail.com"
              }
              
            }
            
          }
        },
        "example": {
          "_id": "63b4217e613598919c6a71ad",
          "category": "sell",
          "title": "rat sell",
          "name": "Sem",
          "date": "02.02.2020",
          "breed": "white",
          "sex": "female",
          "location": "Kyiv",
          "price": 5000,
          "image": "https://animals.pibig.info/uploads/posts/2023-04/thumbs/1680657056_animals-pibig-info-p-krisa-porodi-dambo-zhivotnie-instagram-6.jpg",
          "comments": "sads  axfv  asxvc  gfdhgfjhkfjgfhgdfdyrejfhh",
          "owner": {
            "id": "63b420f8613598919c6a71a8",
            "name": "Alina",
            "phone": "+380671114161",
            "email": "name@mail.com"
          }
        }
      },
      "RemoveNoticeResponse": {
        "type": "object",
        "properties": {
          
          "id": {
            "type": "string",
            "description": "ID notice",
            "example": "63b4217e613598919c6a71ad"
          }, 
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Notice with id 63b4217e613598919c6a71ad successfully delete"
          }
        },
        "example": {
          "id": "63b4217e613598919c6a71ad",
          "message": "Notice with id 63b4217e613598919c6a71ad successfully delete"
          
        }
      }, 

      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Unauthorized response ",
            "example": "Not authorized"
          }
        },
        "example": {
          "message": "Not authorized"
        }
      },
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Bad Request response ",
            "example": "Missing required title"
          }
        },
        "example": {
          "message": "Missing required title"
        }
      },
      "BadRequestForGetNoticesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Bad Request response ",
            "example": "Missing required parameter of category. Must include sell, lost-found or for-free"
          }
        },
        "example": {
          "message": "Missing required parameter of category. Must include sell, lost-found or for-free"
        }
      },
      "InvalidFormatResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Bad Request ",
            "example": "Id 6460cea8f69993272ecf14475 invalid format"
          }
        },
        "example": {
          "message": "Id 6460cea8f69993272ecf14475 invalid format"
        }
      },
      "ForbiddenToDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Forbidden",
            "example": "Forbidden. This notis has other user"
          }
        },
        "example": {
          "message": "Forbidden. This notis has other user"
        }
      },
      "NotFoundNoticeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Not found",
            "example": "Notices with 6460cea8f69993272ecf14475 not found"
          }
        },
        "example": {
          "message": "Notices with 6460cea8f69993272ecf14475 not found"
        }
      },
      "ConflictFavoriteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Conflict",
            "example": "Notices with id 6460cea8f69993272ecf14475 is already been added to your favorite"
          }
        },
        "example": {
          "message": "Notices with id 6460cea8f69993272ecf14475 is already been added to your favorite"
        }
      }, 
      "ConflictFavoriteDelResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Conflict",
            "example": "Notices with id 6460cea8f69993272ecf14475 not found in your favorite"
          }
        },
        "example": {
          "message": "Notices with id 6460cea8f69993272ecf14475 not found in your favorite"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}